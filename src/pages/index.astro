---
import { getCollection } from "astro:content";

import HomeLayout from "@/layouts/HomeLayout.astro";
import SocialLinks from "@/components/SocialLinks.astro";
import PostCard from "@/components/PostCard.astro";
import ProjectCard from "@/components/ProjectCard.astro";
import CourseCard from "@/components/CourseCard.astro";
import Link from "@/components/shared/Link.astro";
import convertAsteriskToStrongTag from "@/utils/convertAsteriskToStrongTag";
import formatDateFromJSON from "@/utils/formatDateFromJSON";

import presentation from "@/data/presentation";

const posts = (await getCollection("posts")).sort(function (first, second) {
  return second.data.publishedAt.getTime() - first.data.publishedAt.getTime();
});
const projects = (await getCollection("projects")).sort(function (first, second) {
  return second.data.publishedAt.getTime() - first.data.publishedAt.getTime();
});
import courses from "@/content/education/courses.json";
---

<HomeLayout title="About | Siddhant Shah">
  <main class="flex flex-col gap-20">
    <article
      class="flex flex-col gap-8 md:flex-row-reverse md:justify-end md:gap-12"
    >
      <div class="flex flex-col gap-8">
        <div
          class="flex w-full flex-col gap-2 md:flex-row md:items-center"
          >
          <h1 class="text-3xl  text-neutral-100"> Hi, I'm Siddhant</h1>
        </div>
        <h2
          class="w-auto max-w-[60ch] text-lg leading-6"
          set:html={convertAsteriskToStrongTag(presentation.description)}
        />
        <SocialLinks />
      </div>
    </article>

    <article class="flex flex-col gap-8">
      <header class="flex w-full flex-row justify-between gap-2">
        <h3 class="text-2xl text-neutral-100">Latest posts</h3>
        <Link href="./posts" label="See All Posts" isUnderline='True' />
      </header>
      {posts.length === 0 && <p>Soon, stay connected ðŸ‘€...</p>}

      <section class="flex flex-col gap-4 md:flex-row md:flex-wrap">
        {
          posts.length !== 0 &&
            posts
              .slice(0, 2)
              .map((post) => (
                <PostCard
                  publishedAt={post.data.publishedAt}
                  title={post.data.title}
                  description={post.data.description}
                  slug={post.slug}
                />
              ))
        }
      </section>
    </article>

    <article class="flex flex-col gap-8">
      <header class="flex w-full flex-row justify-between gap-2">
        <h3 class="text-2xl text-neutral-100">Latest Projects</h3>
        <Link href="./projects" label="See All Projects" isUnderline='True' />
      </header>
      {projects.length === 0 && <p>Soon, stay connected ðŸ‘€...</p>}
      <section class="flex flex-col gap-4 md:flex-row md:flex-wrap">
        {
          projects.length !== 0 &&
            projects
              .slice(0, 2)
              .map((project) => (
                <ProjectCard
                  publishedAt={project.data.publishedAt}
                  title={project.data.title}
                  description={project.data.description}
                  slug={project.slug}
                />
              ))
        }
      </section>
    </article>
    <article class="flex flex-col gap-8">
      <header class="flex w-full flex-row justify-between gap-2">
        <h3 class="text-2xl text-neutral-100">Recent Courses & Workshops</h3>
        <Link href="./education" label="See All Courses" isUnderline='True' />
      </header>
      {courses.length === 0 && <p>Soon, stay connected ðŸ‘€...</p>}
      <section class="flex flex-col gap-2 md:flex-row md:flex-wrap">
        {
          courses.length !== 0 &&
          courses
              .slice(0, 2)
              .map((course) => (
              <CourseCard title={course.title}
                completedOn={formatDateFromJSON(course.completedOn)} 
                offeredBy={course.offeredBy} />
              ))
        }
      </section>
    </article>
  </main>
</Layout>
